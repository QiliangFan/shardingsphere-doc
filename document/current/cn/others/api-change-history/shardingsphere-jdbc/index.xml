<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ShardingSphere-JDBC on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/current/cn/others/api-change-history/shardingsphere-jdbc/</link>
    <description>Recent content in ShardingSphere-JDBC on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://shardingsphere.apache.org/document/current/cn/others/api-change-history/shardingsphere-jdbc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>YAML 配置</title>
      <link>https://shardingsphere.apache.org/document/current/cn/others/api-change-history/shardingsphere-jdbc/yaml-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/current/cn/others/api-change-history/shardingsphere-jdbc/yaml-configuration/</guid>
      <description>5.0.0-alpha 数据分片 配置项说明 dataSources: # 省略数据源配置，请参考使用手册 rules: - !SHARDING tables: # 数据分片规则配置 &amp;lt;logic-table-name&amp;gt; (+): # 逻辑表名称 actualDataNodes (?): # 由数据源名 + 表名组成（参考Inline语法规则） databaseStrategy (?): # 分库策略，缺省表示使用默认分库策略，以下的分片策略只能选其一 standard: # 用于单分片键的标准分片场景 shardingColumn: # 分片列名称 shardingAlgorithmName: # 分片算法名称 complex: # 用于多分片键的复合分片场景 shardingColumns: #分片列名称，多个列以逗号分隔 shardingAlgorithmName: # 分片算法名称 hint: # Hint 分片策略 shardingAlgorithmName: # 分片算法名称 none: # 不分片 tableStrategy: # 分表策略，同分库策略 keyGenerateStrategy: # 分布式序列策略 column: # 自增列名称，缺省表示不使用自增主键生成器 keyGeneratorName: # 分布式序列算法名称 autoTables: # 自动分片表规则配置 t_order_auto: # 逻辑表名称 actualDataSources (?</description>
    </item>
    
  </channel>
</rss>
